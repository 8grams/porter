---
import Forms from "./Forms.astro";
---

<dialog
  slot="dialog"
  class="modal"
  id="eligibleusers"
  x-show="modalType"
  @close="modalType = null"
>
  <div class="modal-box">
    <form method="dialog">
      <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
        >âœ•</button
      >
    </form>
    <Forms
      class="flex flex-col gap-6"
      action="/api/dashboard/settings/eligible-users"
      x-bind:method="modalType === 'create' ? 'POST' : 'PUT'"
      x-data="formEligible"
      @submit.prevent="handleSubmit"
    >
      <input
        type="hidden"
        name="_method"
        x-bind:value="modalType === 'create' ? 'POST' : 'PUT'"
      />
      <input type="hidden" name="_id" :value="selectedUser?.id" />
      <h2
        class="card-title justify-center"
        x-text="(modalType === 'create' ? 'Create' : 'Update') + ' User'"
      >
      </h2>
      <template x-if="error">
        <div role="alert" class="alert alert-error alert-soft">
          <span x-text="message"></span>
        </div>
      </template>
      <div class="flex flex-col gap-2">
        <label for="email">Email</label>
        <input
          id="email"
          type="email"
          name="email"
          placeholder="Input email"
          class="input input-bordered w-full rounded-none"
          :value="selectedUser?.email"
        />
      </div>
      <button
        class="btn btn-neutral w-full rounded-none disabled:opacity-50 disabled:cursor-not-allowed"
        type="submit"
        :disabled="loading"
      >
        <span x-show="!loading">Save</span>
        <span x-show="loading">Loading...</span>
      </button>
    </Forms>
  </div>
</dialog>
<script slot="script" is:inline>
  function formEligible() {
    return {
      message: "",
      error: false,
      loading: false,
      async handleSubmit(e) {
        this.error = false;
        this.message = "";
        this.loading = true;

        const form = e.target;
        const formData = new FormData(form);

        try {
          const response = await fetch(form.action, {
            method: formData.get("_method"),
            body: formData,
            credentials: "include",
          });

          const json = await response.json();

          if (json.error) {
            this.error = true;
            this.message = json.error;
            return;
          }

          if (json.code === 200) {
            this.message = json.message;
            this.error = false;
            this.loading = false;

            const modal = document.getElementById("eligibleusers");
            if (modal) {
              modal.close();
            }
            window.showToast(this.message, "success");

            setTimeout(() => {
              window.location.reload();
            }, 500);
          }
        } catch (error) {
          this.error = true;
          this.message = error.message || "Something went wrong";
        } finally {
          this.loading = false;
        }
      },
    };
  }
</script>
