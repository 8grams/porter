---
import Forms from "./Forms.astro";

const { type = "create" } = Astro.props;

console.log(type);
---

<dialog slot="dialog" class="modal" id="eligibleusers">
  <div class="modal-box">
    <form method="dialog">
      <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
        >âœ•</button
      >
    </form>
    <Forms
      class="flex flex-col gap-6"
      action={type === "create"
        ? "/api/dashboard/settings/eligible-users"
        : "/api/dashboard/settings/eligible-users/update"}
      method="POST"
      x-data="formEligible"
      @submit.prevent="handleSubmit"
    >
      <h2 class="card-title justify-center">
        {type === "create" ? "Create" : "Update"} User
      </h2>
      <template x-if="error">
        <div role="alert" class="alert alert-error alert-soft">
          <span x-text="message"></span>
        </div>
      </template>
      <div class="flex flex-col gap-2">
        <label for="email">Email</label>
        <input
          id="email"
          type="email"
          name="email"
          placeholder="Input email"
          class="input input-bordered w-full rounded-none"
        />
      </div>
      <button
        class="btn btn-neutral w-full rounded-none disabled:opacity-50 disabled:cursor-not-allowed"
        type="submit"
        :disabled="loading"
      >
        <span x-show="!loading">Save</span>
        <span x-show="loading">Loading...</span>
      </button>
    </Forms>
  </div>
</dialog>
<script slot="script" is:inline>
  function showToast(message = "", type = "info") {
    const container = document.getElementById("toast-container");
    if (!container) return;

    const toast = document.createElement("div");
    toast.className = `alert alert-${type}`;
    toast.innerHTML = `<span>${message}</span>`;

    container.appendChild(toast);

    setTimeout(() => {
      toast.remove();
    }, 3000);
  }
  function formEligible() {
    return {
      message: "",
      error: false,
      loading: false,
      async handleSubmit(e) {
        this.error = false;
        this.message = "";
        this.loading = true;

        const form = e.target;
        const formData = new FormData(form);

        try {
          const response = await fetch(form.action, {
            method: form.method,
            body: formData,
            credentials: "include",
          });

          const json = await response.json();

          if (json.error) {
            this.error = true;
            this.message = json.error;
            return;
          }

          if (json.success) {
            this.message = json.message;
            this.error = false;
            this.loading = false;

            const modal = document.getElementById("eligibleusers");
            if (modal) {
              modal.close();
            }
            showToast(this.message, "success");
          }
        } catch (error) {
          console.log(error);
          this.error = true;
          this.message = error.message || "Something went wrong";
          console.error(error);
        } finally {
          this.loading = false;
        }
      },
    };
  }
</script>
