---
import Dashboard from "../../../layouts/Dashboard.astro";
import { openDB } from "../../../utils/db";

const db = await openDB();

const shared = await db.all(
  `
  SELECT 
  shares.*, 
  eligible_users.email
FROM 
  shares
JOIN 
  eligible_users ON shares.share_to = eligible_users.id `,
);
---

<Dashboard pageTitle="Resource">
  <section
    slot="content"
    class="card bg-white w-full rounded-none py-12 px-12 shadow-sm"
  >
    <div class="flex justify-between items-center gap-4 flex-wrap">
      <h2 class="text-xl font-semibold">Resources Shared to You</h2>
      <div
        class="flex items-center gap-4"
        x-data="{
          search: new URLSearchParams(window.location.search).get('search') || '',
          updateSearch() {
            const params = new URLSearchParams(window.location.search);
            if (this.search) {
              params.set('search', this.search);
            } else {
              params.delete('search');
            }
            window.location.search = params.toString();
          }
  }"
      >
        <label class="input rounded-none w-[220px]">
          <svg
            class="h-[1em] opacity-50"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <g
              stroke-linejoin="round"
              stroke-linecap="round"
              stroke-width="2.5"
              fill="none"
              stroke="currentColor"
            >
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.3-4.3"></path>
            </g>
          </svg>
          <input
            type="search"
            class="grow"
            placeholder="Search"
            x-model="search"
            @keydown.enter.prevent="updateSearch"
          />
        </label>
        <label
          class="w-[160px]"
          x-data="{
            type: '',
            updateQueryParam() {
              const params = new URLSearchParams(window.location.search);
              if (this.type) {
                params.set('type', this.type);
              } else {
                params.delete('type');
              }
              window.location.search = params.toString();
            }
          }"
          x-init="type = new URLSearchParams(window.location.search).get('type') || 'all_types'"
        >
          <select
            class="select w-full rounded-none"
            name="type"
            @change="updateQueryParam"
            x-model="type"
          >
            <option value="all_types">All Types</option>
            <option value="aws_iam">AWS Key</option>
            <option value="google_iam"> Google IAM </option>
            <option value="vm">VM</option>
            <option value="kubeconfig">Kubeconfig</option>
            <option value="postgresSQL_access">PostgresSQL Access</option>
            <option value="mySQL_access">MySQL Access</option>
          </select>
        </label>
      </div>
    </div>
  </section>
</Dashboard>
<script is:inline>
  const params = new URLSearchParams(window.location.search);
  if (!params.has("type")) {
    params.set("type", "all_types");

    window.location.search = params.toString();
  }
</script>
